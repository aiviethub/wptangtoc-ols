#!/bin/bash
#
#
# @author: Gia Tuấn
# @website: https://wptangtoc.com
# @since: 2021

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

read -p "Nhap domain hoac subdomain ban muon them 
    (vidu: wptangtoc.com, abc.wptangtoc.com ...) : " NAME

check_root=$(who | awk -F ' ' '{print $1}')
if [[ "$check_root" != "root" ]]; then
  if [[ -f /home/$check_root/.bashrc ]]; then
    echo "vui long su dung tai khoan root de cai dat chuong trinh WPTangToc OLS"
    echo "Da chuyen sang user Root. Vui long chay lai lenh cai dat."
    echo "curl -sO https://wptangtoc.com/share/wptangtoc-ols && bash wptangtoc-ols"
    echo "sudo -i" >>"/home/$check_root/.bashrc"
    sudo -i
  fi
fi

wordpress=$1

if [ "$NAME" = '' ]; then
  clear
  echo "Ban chua nhap ten mien, vui long nhap ten mien cua ban."
  exit
fi

if [ "$NAME" = "${NAME/./}" ]; then
  clear
  echo "Domain nhap khong dung dinh dang. Vi du: wptangtoc.com, abc.wptangtoc.com, wptangtoc.xyz..."
  exit
fi

USER=${NAME//[-._]/wp}

if [ -f /var/cpanel/cpanel.config ]; then
  clear
  echo "webserver cua ban da cai WHM/Cpanel, Neu muon su dung WPTangToc OLS"
  echo "Reinstall lai he dieu hanh Centos 7 - 64 bit moi"
  rm -f wptangtoc-ols
  exit
fi

if [ -f /etc/psa/.psa.shadow ]; then
  clear
  echo "webserver cua ban da cai Plesk, Neu muon su dung WPTangToc OlS"
  echo "Reinstall lai he dieu hanh Centos 7 - 64 bit moi"
  rm -f wptangtoc-ols
  exit
fi

if [ -f /etc/wptt/.wptt.conf ]; then
  clear
  echo "webserver cua ban da cai WPTocTang OLS"
  rm -f wptangtoc-ols
  exit
fi

if [ -f /etc/init.d/directadmin ]; then
  clear
  echo "webserver cua ban da cai DirectAdmin, Neu muon su dung WPTangToc OLS"
  echo "Reinstall lai he dieu hanh Centos 7 - 64 bit moi"
  rm -f wptangtoc-ols
  exit
fi

if [ -f /etc/init.d/webmin ]; then
  clear
  echo "webserver cua ban da cai webmin, Neu muon su dung WPTangToc OLS"
  echo "Reinstall lai he dieu hanh Centos 7 - 64 bit moi"
  rm -f wptangtoc-ols
  exit
fi

sentora="/root/passwords.txt"
hocvps="/etc/hocvps/scripts.conf"
eev3="/usr/local/bin/ee"
wordops="/usr/local/bin/wo"
kusanagi="/home/kusanagi"
cwpsrv="/usr/local/cwpsrv"
vestacp="/usr/local/vesta/"
eev4="/opt/easyengine"
vpssim="/home/vpssim.conf"
larvps="/etc/larvps/.larvps.conf"
tino="/opt/tinopanel"
hostvn="/var/hostvn/hostvn.conf"

if [ -f "${larvps}" ]; then
  echo "webserver cua ban da cai Larvps, Neu muon su dung WPTangToc OLS"
  echo "Reinstall lai he dieu hanh Centos 7 - 64 bit moi"
  rm -f wptangtoc-ols
  exit
fi

if [[ -f "${sentora}" || -f "${hocvps}" || -f "${eev3}" || -f "${wordops}" || -f "${kusanagi}" || -f "${cwpsrv}" || -f "${vestacp}" || -f "${eev4}" || -f "${vpssim}" || -f "${tino}" || -f "${hostvn}" ]]; then
  echo "Ban da su dung cac ban dieu khien khac vui long reintall lai vps de co the su dung WPTangToc OLS"
  echo "Reinstall lai he dieu hanh Centos 7 - 64 bit moi"
  rm -f wptangtoc-ols
  exit
fi

if [[ -d /usr/local/lsws || -d /home/lsws ]]; then
  echo "Ban da cai dat LiteSpeed websever, Neu muon su dung WPTangToc OLS"
  echo "Reinstall lai he dieu hanh Centos 7 - 64 bit moi"
  rm -f wptangtoc-ols
  exit
fi

work_cpucore=$(ulimit -n)
cpucore=$(grep -c ^processor /proc/cpuinfo)
max_client=$(expr $work_cpucore \* $cpucore \* 2)
max_client_max=$(expr $work_cpucore \* $cpucore \* 3)
max_client_php=$(expr $work_cpucore \* $cpucore \/ 8)
tong_ram_byte=$(awk '/MemTotal/ {print $2}' /proc/meminfo)
rong_ram_mb=$(echo "scale=0;${tong_ram_byte}/1024" | bc)
if [[ "$rong_ram_mb" = "" ]]; then
  rong_ram_mb="2048"
fi
tong_ram_mb_db=$(echo "scale=0;${rong_ram_mb}/1.4" | bc)
wptangtocols_version=$(curl -s https://wptangtoc.com/share/version-wptangtoc-ols.txt?domain-install=$NAME)
Server_OS_Version=$(grep VERSION_ID /etc/os-release | awk -F[=,] '{print $2}' | tr -d \" | head -c2 | tr -d .)
if [[ "$Server_OS_Version" != "7" ]]; then
  echo "Cong cu nay chi phat trien tren centos 7 vui long su dung he dieu hanh linux centos 7"
  rm -f wptangtoc-ols
  exit
fi

echo "Ban hay lua chon phien ban PHP muon su dung: "
prompt="Nhap vao lua chon cua ban [1-3]: "
php_version="7.4"
options=("PHP 8.0" "PHP 7.4" "PHP 7.3")
PS3="$prompt"
select opt in "${options[@]}"; do

  case "$REPLY" in
  1)
    php_version="8.0"
    break
    ;;
  2)
    php_version="7.4"
    break
    ;;

  3)
    php_version="7.3"
    break
    ;;

  $((${#options[@]} + 1)))
    printf "\nHe thong se cai dat PHP 7.4\n"
    break
    ;;
  *)
    printf "Ban nhap sai, he thong cai dat PHP 7.4\n"
    break
    ;;
  esac

done
clear

echo "Ban hay lua chon phien ban maria database muon su dung: "
prompt="Nhap vao lua chon cua ban [1-3]: "
mariadb_version="10.5"
options=("Maria database phien ban: 10.6" "Maria database phien ban: 10.5" "Maria database phien ban: 10.4")
PS3="$prompt"
select opt in "${options[@]}"; do

  case "$REPLY" in
  1)
    mariadb_version="10.6"
    break
    ;;
  2)
    mariadb_version="10.5"
    break
    ;;

  3)
    mariadb_version="10.4"
    break
    ;;

  $((${#options[@]} + 1)))
    printf "\nHe thong se cai dat maria database 10.5\n"
    break
    ;;
  *)
    printf "Ban nhap sai, he thong cai dat maria database 10.5\n"
    break
    ;;
  esac

done
clear


echo "Ban co muon thay doi Port SSH? de nang cao bao mat"
read -p "Nhap port SSH moi, bo qua nhan (Enter): " port_ssh

if [[ "$wordpress" = "wp" ]]; then
  read -p "Xac nhan ban muon thiet lap wp-config ngay tai day khong. (y/n): " dongyconfig
  if [[ "$dongyconfig" = "y" ]]; then
    read -p "1. Ten tieu de Website wordpress cua ban muon : " SiteTitle
    read -p "2. Nhap id dang nhap wordpress: " idusername
    read -sp "3. Nhap password wordpress:
Luu y: hay nhap wordpress it nhat 26 ky tu de nang cao bao mat (Password khi gõ sẽ ẩn): " mypassword
    echo ""
    read -p "4. Nhap Email ban cua website $NAME
vi du abc@gmail.com, giatuan@wptangtoc.com: " emailwp
    if [ "$emailwp" = "${emailwp/@/}" ]; then
      clear
      echo "Email khong dung dinh dang."
      echo
      exit
    fi
    tien_to_db=$(date +%s | sha256sum | base64 | head -c 6 ; echo)
  fi
fi
RED='\033[0;31m'
NC='\033[0m'

echo -e "${RED}-------------------------------------------------------------------------"
echo ""
echo " 0     0 000000  0000000                         0000000 "
echo " 0  0  0 0     0    0       00    0    0   0000     0      0000    0000 "
echo " 0  0  0 0     0    0      0  0   00   0  0    0    0     0    0  0    0 "
echo " 0  0  0 000000     0     0    0  0 0  0  0         0     0    0  0 "
echo -e "${NC} 0  0  0 0          0     000000  0  0 0  0  000    0     0    0  0 "
echo " 0  0  0 0          0     0    0  0   00  0    0    0     0    0  0    0 "
echo "  00 00  0          0     0    0  0    0   0000     0      0000    0000 "
echo ""
echo "  00000   0       00000 "
echo " 0     0  0      0     0 "
echo " 0     0  0      0 "
echo -e "${RED} 0     0  0       00000 "
echo " 0     0  0            0 "
echo " 0     0  0      0     0 "
echo "  00000   000000  00000 "
echo -e "--------------------------------------------------------------------------${NC}"
sleep 2
clear
function box_out() {
  local s=("$@") b w
  for l in "${s[@]}"; do
    ((w < ${#l})) && {
      b="$l"
      w="${#l}"
    }
  done
  tput setaf 3
  echo " -${b//?/-}-
| ${b//?/ } |"
  for l in "${s[@]}"; do
    printf '| %s%*s%s |\n' "$(tput setaf 4)" "-$w" "$l" "$(tput setaf 3)"
  done
  echo "| ${b//?/ } |
 -${b//?/-}-"
  tput sgr 0
}

box_out "Xin chao $NAME" "Chao mung ban den voi WPTANGTOC OLS version $wptangtocols_version"
sleep 2
clear
echo ""
echo "Dang chuan bi va tien hanh cai dat WPTangToc OLS $wptangtocols_version"
sleep 1
echo ""
echo "Cam on ban da chon WPTangToc OLS ..."
sleep 3
echo ""
echo "Cong cu phat trien boi Gia Tuan"
sleep 2
clear
yum install epel-release -y
yum clean all && yum update -y

echo "Cap nhat update kernel linux core"

rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm
yum --disablerepo="*" --enablerepo="elrepo-kernel" list available
yum --enablerepo=elrepo-kernel install -y kernel-lt
grub2-set-default 0
grub2-mkconfig -o /boot/grub2/grub.cfg
echo "Hoan tat qua trinh update kernel LTS linux core"

rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
yum install nano wget zip unzip curl yum-cron git certbot bind-utils firewalld -y
yum remove postfix chrony acpid Sendmail Xfs Autofs Isdn Nfslock Apmd nginx -y
echo '[mariadb]
name = MariaDB
baseurl = http://yum.mariadb.org/'$mariadb_version'/centos7-amd64
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1' >/etc/yum.repos.d/MariaDB.repo
yum clean all
yum update -y
echo "Tien hanh cai dat Maria Database $mariadb_version"
yum install MariaDB-server MariaDB-client -y
systemctl start mariadb.service
systemctl enable mariadb.service
echo "Chung minh thay database user root bang wordpressadmin de nang cao bao mat"
db_root_password=$(
  date +%s | sha256sum | base64 | head -c 32
  echo
)

mysql <<EOF
use mysql;
FLUSH PRIVILEGES;
CREATE USER 'wordpressadmin'@'localhost' IDENTIFIED BY '$db_root_password';
GRANT ALL PRIVILEGES ON *.* TO 'wordpressadmin'@'localhost' WITH GRANT OPTION;
DROP USER 'root'@'localhost';
FLUSH PRIVILEGES;
EOF

box_out "Hoan tat qua trinh cai dat Maria database"

systemctl restart mariadb.service
systemctl start firewalld
systemctl enable firewalld
systemctl stop httpd
systemctl disable httpd
systemctl mask httpd

mkdir /etc/wptt
mkdir -p /etc/wptt/
mkdir -p /etc/wptt/vhost

rpm -Uvh http://rpms.litespeedtech.com/centos/litespeed-repo-1.1-1.el7.noarch.rpm

echo '[litespeed]
name=LiteSpeed Tech Repository for CentOS $releasever - $basearch
baseurl=http://rpms.litespeedtech.com/centos/$releasever/$basearch/
failovermethod=priority
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-litespeed

[litespeed-update]
name=LiteSpeed Tech Update Repository for CentOS $releasever - $basearch
baseurl=http://rpms.litespeedtech.com/centos/$releasever/update/$basearch/
failovermethod=priority
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-litespeed

[litespeed-edge]
name=LiteSpeed Tech Edge Repository for CentOS $releasever - $basearch
baseurl=http://rpms.litespeedtech.com/edge/centos/$releasever/$basearch/
failovermethod=priority
enabled=0
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-litespeed

[litespeed-edge-update]
name=LiteSpeed Tech Edge Update Repository for CentOS $releasever - $basearch
baseurl=http://rpms.litespeedtech.com/edge/centos/$releasever/update/$basearch/
failovermethod=priority
enabled=0
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-litespeed
' >/etc/yum.repos.d/litespeed.repo

yum install openlitespeed -y

box_out "hoan tat cai dat OpenLiteSpeed"

php_ver_chon=${php_version//[-._]/}

yum install lsphp${php_ver_chon} lsphp${php_ver_chon}-json lsphp${php_ver_chon}-common lsphp${php_ver_chon}-gd lsphp${php_ver_chon}-imagick lsphp${php_ver_chon}-process lsphp${php_ver_chon}-mbstring lsphp${php_ver_chon}-mysqlnd lsphp${php_ver_chon}-xml lsphp${php_ver_chon}-opcache lsphp${php_ver_chon}-mcrypt lsphp${php_ver_chon}-pdo lsphp${php_ver_chon}-imap lsphp${php_ver_chon}-bcmath lsphp${php_ver_chon}-pecl-memcache lsphp${php_ver_chon}-pecl-memcached lsphp${php_ver_chon}-pgsql lsphp${php_ver_chon}-zip -y
ln -sf /usr/local/lsws/lsphp${php_ver_chon}/bin/lsphp /usr/local/lsws/fcgi-bin/lsphp${php_ver_chon}
ln -sf /usr/local/lsws/lsphp${php_ver_chon}/bin/lsphp /usr/local/lsws/fcgi-bin/lsphp5
ln -sf /usr/local/lsws/lsphp${php_ver_chon}/bin/php /usr/bin/php

box_out "Hoan tat cai dat LSPHP phien ban $php_version"

echo ""
box_out "Kich hoat litespeed websever"
systemctl enable lsws
systemctl start lsws
/usr/local/lsws/bin/lswsctrl start

firewall-cmd --zone=public --add-service=http --add-service=https --permanent
firewall-cmd --zone=public --add-port=443/udp --permanent
firewall-cmd --reload

Post_Install_Regenerate_Webadmin_Console_Passwd() {

  Webadmin_Pass=$(
    head /dev/urandom | tr -dc A-Za-z0-9 | head -c 36
    echo ''
  )
  id_ols_admin=$(
    date +%s | sha256sum | base64 | head -c 24
    echo
  )
  Encrypt_string=$(/usr/local/lsws/admin/fcgi-bin/admin_php -q /usr/local/lsws/admin/misc/htpasswd.php "${Webadmin_Pass}")
  echo "" >/usr/local/lsws/admin/conf/htpasswd
  echo "$id_ols_admin:$Encrypt_string" >/usr/local/lsws/admin/conf/htpasswd
  echo "tai khoan ols webgui username/password da cap nhat thanh cong!"
}
Post_Install_Regenerate_Webadmin_Console_Passwd

echo "#
# PLAIN TEXT CONFIGURATION FILE
#
#It not set, will use host name as serverName
serverName                
httpdWorkers              $cpucore
user                      nobody
group                     nobody
priority                  0
autoRestart               1
chrootPath                /
cpuAffinity               $cpucore
enableLVE                 0
inMemBufSize              60M
swappingDir               /tmp/lshttpd/swap
autoFix503                1
gracefulRestartTimeout    300
mime                      conf/mime.properties
showVersionNumber         0
adminEmails               root@localhost

errorlog logs/error.log {
  logLevel                ERROR
  debugLevel              0
  rollingSize             10M
  enableStderrLog         1
}

accesslog logs/access.log {
  rollingSize             10M
  keepDays                30
  compressArchive         0
}

indexFiles                index.html, index.php

expires  {
  enableExpires           1
  expiresByType           image/*=A7776000, text/css=A7776000, application/x-javascript=A7776000, application/javascript=A7776000, font/*=A7776000, application/x-font-ttf=A7776000
}
autoLoadHtaccess          1

tuning  {
  maxConnections          $max_client_max
  maxSSLConnections       $max_client_max
  connTimeout             300
  maxKeepAliveReq         $max_client_max
  keepAliveTimeout        10
  sndBufSize              0
  rcvBufSize              0
  maxReqURLLen            32768
  maxReqHeaderSize        65536
  maxReqBodySize          2047M
  maxDynRespHeaderSize    32768
  maxDynRespSize          2047M
  maxCachedFileSize       4096
  totalInMemCacheSize     20M
  maxMMapFileSize         256K
  totalMMapCacheSize      40M
  useSendfile             1
  fileETag                28
  enableGzipCompress      1
  compressibleTypes       default
  enableDynGzipCompress   1
  gzipCompressLevel       6
  gzipAutoUpdateStatic    1
  gzipStaticCompressLevel 6
  brStaticCompressLevel   6
  gzipMaxFileSize         10M
  gzipMinFileSize         300

  quicEnable              1
  quicShmDir              /dev/shm
}

fileAccessControl  {
  followSymbolLink        1
  checkSymbolLink         0
  requiredPermissionMask  000
  restrictedPermissionMask 000
}

perClientConnLimit  {
  staticReqPerSec         0
  dynReqPerSec            0
  outBandwidth            0
  inBandwidth             0
  softLimit               10000
  hardLimit               10000
  gracePeriod             15
  banPeriod               300
}

CGIRLimit  {
  maxCGIInstances         20
  minUID                  11
  minGID                  10
  priority                0
  CPUSoftLimit            10
  CPUHardLimit            50
  memSoftLimit            1460M
  memHardLimit            1470M
  procSoftLimit           400
  procHardLimit           450
}

accessDenyDir  {
  dir                     /
  dir                     /etc/*
  dir                     /dev/*
  dir                     conf/*
  dir                     admin/conf/*
}

accessControl  {
  allow                   ALL
}

extprocessor lsphp {
  type                    lsapi
  address                 uds://tmp/lshttpd/lsphp.sock
  maxConns                $max_client_php
  env                     PHP_LSAPI_CHILDREN=$max_client_php
  env                     LSAPI_AVOID_FORK=200M
  initTimeout             60
  retryTimeout            0
  pcKeepAliveTimeout      15
  respBuffer              0
  autoStart               2
  path                    /usr/local/lsws/lsphp74/bin/lsphp
  backlog                 100
  instances               1
  memSoftLimit            ${rong_ram_mb}M
  memHardLimit            ${rong_ram_mb}M
  procSoftLimit           $max_client
  procHardLimit           $max_client
}

scripthandler  {
  add                     lsapi:lsphp php
}

railsDefaults  {
  maxConns                1
  env                     LSAPI_MAX_IDLE=60
  initTimeout             60
  retryTimeout            0
  pcKeepAliveTimeout      60
  respBuffer              0
  backlog                 50
  runOnStartUp            3
  extMaxIdleTime          300
  priority                3
  memSoftLimit            2047M
  memHardLimit            2047M
  procSoftLimit           500
  procHardLimit           600
}

wsgiDefaults  {
  maxConns                5
  env                     LSAPI_MAX_IDLE=60
  initTimeout             60
  retryTimeout            0
  pcKeepAliveTimeout      60
  respBuffer              0
  backlog                 50
  runOnStartUp            3
  extMaxIdleTime          300
  priority                3
  memSoftLimit            2047M
  memHardLimit            2047M
  procSoftLimit           500
  procHardLimit           600
}

nodeDefaults  {
  maxConns                5
  env                     LSAPI_MAX_IDLE=60
  initTimeout             60
  retryTimeout            0
  pcKeepAliveTimeout      60
  respBuffer              0
  backlog                 50
  runOnStartUp            3
  extMaxIdleTime          300
  priority                3
  memSoftLimit            2047M
  memHardLimit            2047M
  procSoftLimit           500
  procHardLimit           600
}

module cache {
  internal                1
checkPrivateCache   1
checkPublicCache    1
maxCacheObjSize     10000000
maxStaleAge         200
qsCache             1
reqCookieCache      1
respCookieCache     1
ignoreReqCacheCtrl  1
ignoreRespCacheCtrl 0

enableCache         0
expireInSeconds     3600
enablePrivateCache  0
privateExpireInSeconds 3600
  ls_enabled              1
}

virtualhost $NAME {
  vhRoot                  /usr/local/lsws/$NAME/
  configFile              /usr/local/lsws/conf/vhosts/$NAME/$NAME.conf
  allowSymbolLink         1
  enableScript            1
  restrained              1
  maxKeepAliveReq         1000
  setUIDMode              2
  user                    $USER
  group                   $USER
}

listener http {
  address                 *:80
  secure                  0
  map                     $NAME $NAME
}

listener https {
  address                 *:443
  secure                  1
  keyFile                 /etc/letsencrypt/live/$NAME/privkey.pem
  certFile                /etc/letsencrypt/live/$NAME/cert.pem
  certChain               0
  CACertFile              /etc/letsencrypt/live/$NAME/chain.pem
  sslProtocol             24
  renegProtection         1
  sslSessionCache         1
  sslSessionTickets       1
  enableSpdy              15
  enableQuic              1
  map                     $NAME $NAME
}

vhTemplate centralConfigLog {
  templateFile            conf/templates/ccl.conf
  listeners               http
}

vhTemplate EasyRailsWithSuEXEC {
  templateFile            conf/templates/rails.conf
  listeners               http
}" >/usr/local/lsws/conf/httpd_config.conf

mkdir /usr/local/lsws/conf/vhosts/"$NAME"/
touch /usr/local/lsws/conf/vhosts/"$NAME"/"$NAME".conf

NAMEPHP=${NAME//[-._]/}

echo "docRoot                   /usr/local/lsws/$NAME/html
vhDomain                  $NAME
enableGzip                1
cgroups                   0


index  {
  useServer               0
  indexFiles              index.html index.php
  autoIndex               0
}

scripthandler  {
  add                     lsapi:$NAMEPHP php
}

accessControl  {
  allow                   *
}

lsrecaptcha  {
  enabled                 1
  type                    0
}

extprocessor $NAMEPHP {
  type                    lsapi
  address                 uds://tmp/lshttpd/$NAMEPHP.sock
  maxConns                $max_client_php
  env                     PHP_LSAPI_CHILDREN=$max_client_php
  env                     LSAPI_AVOID_FORK=200M
  initTimeout             60
  retryTimeout            0
  pcKeepAliveTimeout      25
  respBuffer              0
  autoStart               2
  path                    /usr/local/lsws/lsphp74/bin/lsphp
  backlog                 100
  instances               1
  extUser                 $USER
  extGroup                $USER
  runOnStartUp            2
  priority                0
  memSoftLimit            ${rong_ram_mb}M
  memHardLimit            ${rong_ram_mb}M
  procSoftLimit           $max_client
  procHardLimit           $max_client
}

context / {
  location                /usr/local/lsws/$NAME/html
  allowBrowse             1
  extraHeaders            <<<END_extraHeaders
X-XSS-Protection 1;mode=block
X-Frame-Options SAMEORIGIN
Referrer-Policy strict-origin-when-cross-origin
X-Content-Type-Options nosniff
X-Powered-By WPTangTocOLS
permissions-policy accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()
  END_extraHeaders


  rewrite  {

  }
  addDefaultCharset       off

  phpIniOverride  {

  }
}

rewrite  {
  enable                  1
  autoLoadHtaccess        1
/usr/local/lsws/$NAME/html/.htaccess
}

vhssl  {
  keyFile                 /etc/letsencrypt/live/$NAME/privkey.pem
  certFile                /etc/letsencrypt/live/$NAME/cert.pem
  certChain               0
  CACertFile              /etc/letsencrypt/live/$NAME/chain.pem
  sslProtocol             24
  renegProtection         1
  sslSessionCache         1
  sslSessionTickets       1
  enableSpdy              15
  enableQuic              1
  enableStapling          1
  ocspRespMaxAge          86400
  ocspResponder           http://cert.int-x3.letsencrypt.org/
  ocspCACerts             /etc/letsencrypt/live/$NAME/chain.pem
}

module cache {
checkPrivateCache   1
checkPublicCache    1
maxCacheObjSize     10000000
maxStaleAge         200
qsCache             1
reqCookieCache      1
respCookieCache     1
ignoreReqCacheCtrl  1
ignoreRespCacheCtrl 0
storagePath /usr/local/lsws/$NAME/luucache
enableCache         0
expireInSeconds     3600
enablePrivateCache  0
privateExpireInSeconds 3600
  ls_enabled              1
}" >/usr/local/lsws/conf/vhosts/"$NAME"/"$NAME".conf

chown -R lsadm:nobody /usr/local/lsws/conf/vhosts/"$NAME"
chmod -R 750 /usr/local/lsws/conf/vhosts/"$NAME"

mkdir /usr/local/lsws/"$NAME"
mkdir /usr/local/lsws/"$NAME"/html
mkdir /usr/local/lsws/"$NAME"/luucache
useradd "$USER" -p -m -d /home/"$USER"
chown -R "$USER":"$USER" /usr/local/lsws/"$NAME"/html
chmod 755 /usr/local/lsws/"$NAME"
chmod 755 /usr/local/lsws/"$NAME"/html
/usr/local/lsws/bin/lswsctrl restart

box_out 'Cai dat object cache LSMEMCACHED'

yum groupinstall "Development Tools" -y
yum install autoconf automake zlib-devel openssl-devel expat-devel pcre-devel libmemcached-devel cyrus-sasl* -y
git clone https://github.com/litespeedtech/lsmcd.git
cd lsmcd
./fixtimestamp.sh
./configure CFLAGS=" -O3" CXXFLAGS=" -O3"
make
sudo make install
echo 'Repl.HeartBeatReq=30
Repl.HeartBeatRetry=3000
Repl.MaxTidPacket=2048000
Repl.GzipStream=YES
Repl.LbAddrs=127.0.0.1:12340
Repl.ListenSvrAddr=127.0.0.1:12340
REPL.DispatchAddr=127.0.0.1:5501
RepldSockPath=/tmp/repld.usock
CACHED.PRIADDR=127.0.0.1:11000

#CACHED.ADDR=127.0.0.1:11211
CACHED.ADDR=UDS:///tmp/lsmcd.sock
#default is 8, it can be bigger depending on cache data amount
Cached.Slices=8
Cached.Slice.Priority.0=100
Cached.Slice.Priority.1=100
Cached.Slice.Priority.2=100
Cached.Slice.Priority.3=100
Cached.Slice.Priority.4=100
Cached.Slice.Priority.5=100
Cached.Slice.Priority.6=100
Cached.Slice.Priority.7=100

Cached.ShmDir=/dev/shm/lsmcd
#If you change the UseSasl or DataByUser configuration options you need to remove the ShmDir folder and contents.
#Cached.UseSasl=true
#Cached.DataByUser=true
#Cached.Anonymous=false
#Cached.UserSize=1000
#Cached.HashSize=500000
#CACHED.MEMMAXSZ=0
#CACHED.NOMEMFAIL=false

##this is the global setting, no need to have per slice configuration. 
User=nobody
Group=nobody
#depends CPU core
CachedProcCnt=4
CachedSockPath=/tmp/cached.usock.
#TmpDir=/tmp/lsmcd
LogLevel=notice
#LogLevel=dbg_medium
LogFile=/tmp/lsmcd.log
' >/usr/local/lsmcd/conf/node.conf
echo "Hoan tat cai dat object cache LSmemcached"
systemctl start lsmcd
systemctl enable lsmcd
systemctl restart lsws

box_out "Kich hoat object cache LSmemcached"

timedatectl set-timezone Asia/Ho_Chi_Minh

echo "key_buffer_size = 500M
table_cache = 4000
sort_buffer_size = 3M
read_buffer_size = 2M
read_rnd_buffer_size = 8M
myisam_sort_buffer_size = 64M
innodb_buffer_pool_size= ${tong_ram_mb_db}M
max_connections = $max_client
query_cache_type = 1
query_cache_limit = 5M
query_cache_size = 500M
tmp_table_size= 20M
max_heap_table_size= 20M
thread_cache_size = 64
max_allowed_packet= 64M" >>/etc/my.cnf.d/server.cnf
sed -i '/\[mysqld\]/a skip-log-bin' /etc/my.cnf.d/server.cnf

systemctl restart mariadb.service

echo 'opcache.memory_consumption=128
opcache.interned_strings_buffer=8
opcache.max_accelerated_files=10000
opcache.revalidate_freq=100
opcache.fast_shutdown=1
opcache.enable_cli=1' >>/usr/local/lsws/lsphp${php_ver_chon}/etc/php.ini
sed -i "s/expose_php = On/expose_php = off/g" /usr/local/lsws/lsphp${php_ver_chon}/etc/php.ini
sed -i "s/upload_max_filesize = 2M/upload_max_filesize = 8M/g" /usr/local/lsws/lsphp${php_ver_chon}/etc/php.ini
sed -i "s/max_execution_time = 30/max_execution_time = 120/g" /usr/local/lsws/lsphp${php_ver_chon}/etc/php.ini

sed -E -i "s/lsphp[0-9]+/lsphp$php_ver_chon/g" /usr/local/lsws/conf/httpd_config.conf
sed -E -i "s/lsphp[0-9]+/lsphp$php_ver_chon/g" /usr/local/lsws/conf/vhosts/"$NAME"/"$NAME".conf

cd
wget https://wptangtoc.com/share/wptangtoc-ols.zip
unzip -o wptangtoc-ols.zip
mv tool-wptangtoc-ols/* /etc/wptt/
chmod -R 744 /etc/wptt

cat <(crontab -l) <(echo '0 0,12 * * * /usr/bin/certbot renew --quiet') | crontab -
cat <(crontab -l) <(echo '0 1 * * 1 yum --security update -y') | crontab -
cat <(crontab -l) <(echo '*/3 * * * * if ! find /usr/local/lsws/*/html/ -maxdepth 2 -type f -newer /usr/local/lsws/cgid -name '.htaccess' -exec false {} +; then /usr/local/lsws/bin/lswsctrl restart >/dev/null 2>&1; fi') | crontab -
cat <(crontab -l) <(echo '*/6 * * * * if ! find /usr/local/lsws/*/html/ -maxdepth 2 -type f -newer /usr/local/lsws/cgid -name 'wp-config.php' -exec false {} +; then /etc/wptt/wptt-phan-quyen-all >/dev/null 2>&1; fi') | crontab -

service crond restart

touch /usr/local/lsws/"$NAME"/html/.htaccess
echo '# BEGIN WordPress
# Các nội dung nằm giữa `BEGIN WordPress` và `END WordPress` được tạo ra tự động, và chỉ nên được thay đổi thông qua các filter của WordPress. Mọi thay đổi tới thành phần này có thể sẽ bị mất và ghi đè.
<IfModule mod_rewrite.c>
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
</IfModule>

# END WordPress

<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteBase /
    RewriteRule ^wp-admin/includes/ - [F,L]
    RewriteRule !^wp-includes/ - [S=3]
    RewriteRule ^wp-includes/[^/]+\.php$ - [F,L]
    RewriteRule ^wp-includes/js/tinymce/langs/.+\.php - [F,L]
    RewriteRule ^wp-includes/theme-compat/ - [F,L]
</IfModule>

' >/usr/local/lsws/"$NAME"/html/.htaccess

yum -y install policycoreutils-python
semanage permissive -a unconfined_service_t

ip=$(curl -s myip.directadmin.com)
if [[ "$ip" = "" ]]; then
  ip=$(curl -s ifconfig.me)
fi

name_db=${NAME//[-._]/}
ramdom_db=$(date +%s | sha256sum | base64 | head -c 18 ; echo)
sleep 2
database123=${name_db}_${ramdom_db}_dbname
username123=${name_db}_${ramdom_db}_username
password123=$(date +%s | sha256sum | base64 | head -c 36 ; echo)

echo "Dang tien hanh them database moi cho website $NAME..."
mysql -u wordpressadmin -p"$db_root_password" -e "CREATE DATABASE IF NOT EXISTS ${database123}"
mysql -u wordpressadmin -p"$db_root_password" -e "CREATE USER IF NOT EXISTS '${username123}'@'localhost' IDENTIFIED BY '${password123}'"
mysql -u wordpressadmin -p"$db_root_password" -e "GRANT ALL PRIVILEGES ON ${database123}.* TO '${username123}'@'localhost' WITH GRANT OPTION"
mysql -u wordpressadmin -p"$db_root_password" -e "FLUSH PRIVILEGES"
clear
box_out "Da them databse danh cho $NAME thanh cong"

if [ "$port_ssh" = '' ]; then
  port_ssh=22
fi
echo "Xac nhan port_ssh la: $port_ssh"

if [[ "$port_ssh" != "22" ]]; then
  sed -i "/Port/d" /etc/ssh/sshd_config
  sed -i "/ListenAddress ::/a Port $port_ssh" /etc/ssh/sshd_config
  semanage port -a -t ssh_port_t -p tcp $port_ssh
  firewall-cmd --permanent --zone=public --add-port=$port_ssh/tcp
  firewall-cmd --reload
  systemctl reload sshd.service
fi

touch /usr/local/lsws/conf/disablewebconsole

yum install fail2ban fail2ban-systemd fail2ban-firewalld -y

cp -pf /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
cat >"/etc/fail2ban/jail.d/sshd.local" <<END
[sshd]
enabled = true
port = ${port_ssh}
logpath = %(sshd_log)s
maxretry = 5
bantime = 3600
END

sed -i "/Subsystem/d" /etc/ssh/sshd_config
cat >>"/etc/ssh/sshd_config" <<END
Subsystem sftp internal-sftp
END

systemctl enable fail2ban
systemctl start fail2ban

curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
chmod +x wp-cli.phar
mv wp-cli.phar /usr/local/bin/wp
sed -i "s/7080/19019/g" /usr/local/lsws/admin/conf/admin_config.conf
/usr/local/lsws/bin/lswsctrl restart

swapoff -a -v
rm -rf /var/swap.1
/bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=512
/sbin/mkswap /var/swap.1
/sbin/swapon /var/swap.1
sed -i '/swap.1/d' /etc/fstab
echo /var/swap.1 none swap defaults 0 0 >>/etc/fstab

sysctl vm.swappiness=0
echo vm.swappiness=0 >>/etc/sysctl.conf

echo '[litespeed]
name=LiteSpeed Tech Repository for CentOS $releasever - $basearch
baseurl=http://rpms.litespeedtech.com/centos/$releasever/$basearch/
failovermethod=priority
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-litespeed

[litespeed-update]
name=LiteSpeed Tech Update Repository for CentOS $releasever - $basearch
baseurl=http://rpms.litespeedtech.com/centos/$releasever/update/$basearch/
failovermethod=priority
enabled=0
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-litespeed

[litespeed-edge]
name=LiteSpeed Tech Edge Repository for CentOS $releasever - $basearch
baseurl=http://rpms.litespeedtech.com/edge/centos/$releasever/$basearch/
failovermethod=priority
enabled=0
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-litespeed

[litespeed-edge-update]
name=LiteSpeed Tech Edge Update Repository for CentOS $releasever - $basearch
baseurl=http://rpms.litespeedtech.com/edge/centos/$releasever/update/$basearch/
failovermethod=priority
enabled=0
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-litespeed
' >/etc/yum.repos.d/litespeed.repo

sed -i 's/update_cmd = default/update_cmd = security/g' /etc/yum/yum-cron.conf
systemctl start yum-cron
systemctl enable yum-cron

mkdir -p /wptangtoc-ols

## lưu file cấu hình
echo "port_ssh=$port_ssh
database_admin_username=wordpressadmin
database_admin_password=$db_root_password
Ten_dang_nhap_ols_webgui=$id_ols_admin
Password_OLS_webgui=$Webadmin_Pass
version_wptangtoc_ols=$wptangtocols_version
php_version_check=$php_version
Website_chinh=$NAME" >/etc/wptt/.wptt.conf

touch /etc/wptt/vhost/."$NAME".conf
echo "Website_main=$NAME
DB_Name_web=$database123
DB_User_web=$username123
DB_Password_web=$password123
Duong_Dan_thu_muc_web=/usr/local/lsws/$NAME/html
User_name_vhost=$USER
php_version_check_main=$php_version
" >/etc/wptt/vhost/.$NAME.conf
echo ". /etc/wptt/wptt-status" >>/root/.bashrc
echo ". /etc/wptt/wptt-check" >>/root/.bashrc
echo "cd /wptangtoc-ols" >>/root/.bashrc
echo "alias 1='wptangtoc'" >>/root/.bashrc
echo "alias 11='wptangtoc'" >>/root/.bashrc
echo "alias 99='. /etc/wptt/wptt-update'" >>/root/.bashrc
echo "alias 999='. /etc/wptt/wptt-update2'" >>/root/.bashrc
mkdir -p /usr/local/backup-website
mkdir -p /usr/local/backup-website/"$NAME"
chmod 700 /usr/local/backup-website/"$NAME"

mkdir -p /wptangtoc-ols/"$NAME"
mkdir -p /wptangtoc-ols/"$NAME"/backup-website
ln -s /usr/local/lsws/"$NAME"/html /wptangtoc-ols/"$NAME"
ln -s /usr/local/backup-website/"$NAME"/ /wptangtoc-ols/"$NAME"/backup-website
mv /etc/wptt/wptangtoc /usr/bin
systemctl daemon-reload

if [[ "$wordpress" = "wp" ]]; then
  cd /usr/local/lsws/"$NAME"/html/
  rm -rf /usr/local/lsws/"$NAME"/html/*
  echo "tien hanh tai ma nguon WordPress"
  wget http://wordpress.org/latest.tar.gz
  tar -zxvf latest.tar.gz
  mv wordpress/* /usr/local/lsws/"$NAME"/html && rm -rf wordpress && rm -f latest.tar.gz
    if [[ "$dongyconfig" = "y" ]]; then
      wp core config --dbname="$database123" --dbuser="$username123" --dbpass="$password123" --dbhost=localhost --dbprefix="${tien_to_db}"_ --allow-root --extra-php <<PHP
define( 'WP_DEBUG', false );
define( 'WP_DEBUG_LOG', false );
PHP
      echo "Dang cau hinh wp-config cho website $NAME"
      wp core install --url=http://"${NAME}" --title="$SiteTitle" --admin_user="$idusername" --admin_password="$mypassword" --admin_email="$emailwp" --allow-root >/dev/null 2>&1
    fi
  

  echo '# BEGIN WordPress
# Các nội dung nằm giữa `BEGIN WordPress` và `END WordPress` được tạo ra tự động, và chỉ nên được thay đổi thông qua các filter của WordPress. Mọi thay đổi tới thành phần này có thể sẽ bị mất và ghi đè.
<IfModule mod_rewrite.c>
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
</IfModule>

# END WordPress

<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteBase /
    RewriteRule ^wp-admin/includes/ - [F,L]
    RewriteRule !^wp-includes/ - [S=3]
    RewriteRule ^wp-includes/[^/]+\.php$ - [F,L]
    RewriteRule ^wp-includes/js/tinymce/langs/.+\.php - [F,L]
    RewriteRule ^wp-includes/theme-compat/ - [F,L]
</IfModule>

' >/usr/local/lsws/"$NAME"/html/.htaccess
  wp language core install vi --path=/usr/local/lsws/"$NAME"/html --activate --allow-root
  wp option update timezone_string "Asia/Ho_Chi_Minh" --path=/usr/local/lsws/"$NAME"/html --allow-root
  wp rewrite structure '/%postname%/' --path=/usr/local/lsws/"$NAME"/html --allow-root
  chown -R "$USER":"$USER" /usr/local/lsws/"$NAME"/html
  /usr/local/lsws/bin/lswsctrl restart >/dev/null 2>&1
cd
echo "Hoan tat cai dat ma nguon WordPress cho website $NAME"
fi

Caidat_Time="$((Time_Count / 3600)) gio $(((SECONDS / 60) % 60)) phut $((Time_Count % 60)) giay"
clear
RED='\033[0;31m'
NC='\033[0m'

echo -e "${RED}-------------------------------------------------------------------------"
echo ""
echo " 0     0 000000  0000000                         0000000 "
echo " 0  0  0 0     0    0       00    0    0   0000     0      0000    0000 "
echo " 0  0  0 0     0    0      0  0   00   0  0    0    0     0    0  0    0 "
echo " 0  0  0 000000     0     0    0  0 0  0  0         0     0    0  0 "
echo -e "${NC} 0  0  0 0          0     000000  0  0 0  0  000    0     0    0  0 "
echo " 0  0  0 0          0     0    0  0   00  0    0    0     0    0  0    0 "
echo "  00 00  0          0     0    0  0    0   0000     0      0000    0000 "
echo ""
echo "  00000   0       00000 "
echo " 0     0  0      0     0 "
echo " 0     0  0      0 "
echo -e "${RED} 0     0  0       00000 "
echo " 0     0  0            0 "
echo " 0     0  0      0     0 "
echo "  00000   000000  00000 "
echo -e "--------------------------------------------------------------------------${NC}"
echo "-------------------------------------------------------------------------"
echo "-------------------------------------------------------------------------"
echo -e "${RED}-------------------------------------------------------------------------"
echo "  	     Cai dat thanh cong WPTangToc OLS $wptangtocols_version	"
echo "-------------------------------------------------------------------------"
echo -e "--------------------------------------------------------------------------${NC}"
echo "Disk			: $(df -h | awk '$NF=="/"{printf "%d/%dGB (%s)\n", $3,$2,$5}')                        "
echo "RAM			: $(free -m | awk 'NR==2{printf "%s/%sMB (%.2f%%)\n", $3,$2,$3*100/$2 }')                         "
echo "Tong thoi gian cai dat	: $Caidat_Time               			 "
echo "-------------------------------------------------------------------------"
echo "-------------------------------------------------------------------------"
echo "              Luu lai thong tin ben duoi de truy cap ve sau              "
echo "-------------------------------------------------------------------------"
echo "1.Port SSH			: $port_ssh                                             		  "
echo "2.Truy cap ssh tren terminal	: ssh -p $port_ssh root@$ip             	 "
echo "3.Truy cap sftp tren terminal	: sftp -oPort=$port_ssh root@$ip             	 "
echo "4.password database		: $db_root_password                			 "
echo "5.login maria database		: mysql -u wordpressadmin -p$db_root_password                	"
echo "6.Ten dang nhap OLS webgui	: $id_ols_admin                        		   "
echo "7.Password OLS webgui		: $Webadmin_Pass                    	        	 "
echo "8.Thu muc website		: /usr/local/lsws/$NAME/html             	 "
echo "9.Thu muc website rut gon	: /wptangtoc-ols/$NAME             	 "
echo "10.Moi thong tin tai khoan duoc luu tru: /etc/wptt/.wptt.conf       	 "
echo "-------------------------------------------------------------------------"
echo "De goi menu cac cong cu WPTangToc OLS hay an phim: 1  		        	 "
echo "-------------------------------------------------------------------------"
echo "Thong tin database tao danh cho website $NAME"
echo "1.DB_Name			: $database123                                               	 "
echo "2.DB_User			: $username123                                               	 "
echo "3.DB_Password			: $password123      			"
echo "-------------------------------------------------------------------------"
echo "Cong cu WPTangToc OLS phat trien boi: Gia Tuan"
echo "Yeu Cau Ho tro		: https://wptangtoc.com/lien-he/"
echo "Giup chung toi luon giu WPTangToc OLS co the su dung mien phi bang cach dong gop vao"
echo "Tai tro phat trien	: https://wptangtoc.com/donate/"
echo "Huong dan		: https://wptangtoc.com/wptangtoc-ols-huong-dan"
echo "-------------------------------------------------------------------------"
echo "Dang kiem tra he thong cua ban..."
sleep 1

if [[ ! -d /var/lib/mysql ]]; then
  echo "Thong bao loi"
  echo "Ban chua cai dat maria database"
fi

if [[ ! -d /usr/local/lsws ]]; then
  echo "Da co van de xay ra ban chua cai duoc LiteSpeed websever..."
fi

if [[ -d /usr/local/lsws ]]; then
  checkhoatdong=$(curl -Is "$ip" | head -n 1 | grep -c "404")
  if [[ "$checkhoatdong" = "0" ]]; then
    echo "Thong bao da co van de xay ra"
    echo "He thong xac nhan rang may chu cua ban chua duoc mo cong port mang co van de ve tuong lua firewall"
    echo "Ban khong the su dung tuong lua firewall kich hoat tu terminal ssh, co the he thong cua ban su dung firewal cloud hay mo firewall cloud tu nha cung cap dich vu may chu"
    echo "Ban hay tu mo cong port 80 va port 443 trong trang quan ly may chu cua nha cung cap dich vu de co the su dung duoc wptangtoc ols"
    echo "-------------------------------------------------------------------------"
    echo "webserver se khoi dong lai."
  else
    box_out "Da kiem tra he thong cua ban moi thu hoat dong tot" "Cai dat thanh cong WPTangToc OLS $wptangtocols_version" "" "Webserver se khoi dong lai va tan huong"
  fi
fi
sleep 2
cd && rm -f wptangtoc-ols.zip
cd && rm -rf tool-wptangtoc-ols
cd && rm -f wptangtoc-ols
reboot

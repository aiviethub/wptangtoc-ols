#!/bin/bash
# @author: Gia Tuấn
# @website: https://wptangtoc.com
# @email: giatuan@wptangtoc.com
# @since: 2025
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
stty iutf8 #từ latin1 sang utf8, nhiều khi anh em dùng bộ gõ tiếng việt: dùng à â nó thêm \xc3 hay \xa9 ... tương thích với bộ gõ tiếng việt telex khi nhập domain

if [[ -f "/etc/wptt/.wptt.conf" ]]; then
	. "/etc/wptt/.wptt.conf"
else
	echo "Lỗi: Không tìm thấy tệp cấu hình của wptangtoc ols"
	exit;
fi

if [[ -z "$ngon_ngu" ]]; then # Sửa kiểm tra thành -z cho chuỗi rỗng
	ngon_ngu='vi'
fi
# Kiểm tra xem tệp ngôn ngữ có tồn tại không
lang_file="/etc/wptt/lang/${ngon_ngu}.sh"
if [[ -f "$lang_file" ]]; then
    . "$lang_file"
else
    # Có thể thêm logic để tải ngôn ngữ mặc định nếu cần
    . "/etc/wptt/lang/vi.sh" # Ví dụ tải tiếng Việt
    # Gán lại các biến nếu cần thiết dựa trên vi.sh
    quan_ly_wordpress=${quan_ly_wordpress:-"Quản lý WordPress"} # Ví dụ
    # ... gán các biến khác tương tự
fi


if [[ $1 = "" ]];then
	clear
	RED='\033[0;31m'
	NC='\033[0m'
	# Thêm kiểm tra xem systemctl có tồn tại không
	if command -v systemctl &> /dev/null; then
	    ols1=$(systemctl status lsws.service | grep 'Active:' | awk '{print $2}') # Cách lấy status ổn định hơn
	    mariadb1=$(systemctl status mariadb.service | grep 'Active:' | awk '{print $2}') # Cách lấy status ổn định hơn

	    if [[ "$ols1" = "active" ]]; then
		    ols="${hoat_dong_tot}" # Thêm giá trị mặc định
	    else
		    echo "========================================================================="
		    ols2="Webserver LiteSpeed ${dang_gap_su_co:-đang gặp sự cố}" # Thêm giá trị mặc định
		    echo "$ols2" # Hiển thị thông báo trước khi restart
		    /usr/local/lsws/bin/lswsctrl restart >/dev/null 2>&1
		    echo "Đã thử khởi động lại LiteSpeed." # Thêm thông báo
		    echo "========================================================================="
	    fi

	    if [[ "$mariadb1" = "active" ]]; then
		    mariadb="${hoat_dong_tot}" # Thêm giá trị mặc định
	    else
		    echo "========================================================================="
		    mariadb2="MariaDB Database ${dang_gap_su_co:-đang gặp sự cố}" # Thêm giá trị mặc định
		    echo "$mariadb2" # Hiển thị thông báo trước khi restart
		    systemctl restart mariadb.service
            echo "Đã thử khởi động lại MariaDB." # Thêm thông báo
		    echo "========================================================================="
	    fi
    else
         echo "Lệnh 'systemctl' không tồn tại. Bỏ qua kiểm tra trạng thái dịch vụ."
         ols1="unknown"
         mariadb1="unknown"
    fi


	echo -e "${RED}+-----------------------------------------------------------------------+"
	echo "|                                                                       |"
	echo "|                        WPTANGTOC OLS $phien_ban: $version_wptangtoc_ols			|"
	echo "|                          $phat_trien_boi_gia_tuan			|"
	if [[ $wptangtoc_ols_giatuan = "1" ]]; then
		echo "|                          WPTangToc OLS Premium                        |"
	fi
	if [[ $beta_wptangtoc_ols = "1" ]]; then
		echo "|                          WPTangToc OLS beta                           |"
	fi
	echo -e "+-----------------------------------------------------------------------+ ${NC}"
	echo "========================================================================="
	# Kiểm tra lại trạng thái sau khi thử restart (tùy chọn)
	# ols1=$(systemctl status lsws.service | grep 'Active:' | awk '{print $2}')
	# mariadb1=$(systemctl status mariadb.service | grep 'Active:' | awk '{print $2}')

	if [[ "$ols1" = "active" && "$mariadb1" = "active" ]]; then
		hoatdong="${hoat_dong_tot:-Hoạt động tốt}"
	elif [[ "$ols1" = "unknown" || "$mariadb1" = "unknown" ]]; then
	    hoatdong="${tinh_trang_may_chu:-Tình trạng máy chủ}: Không thể xác định"
	else
	    hoatdong="${tinh_trang_may_chu:-Tình trạng máy chủ}: ${may_chu_dang_gap_van_de:-Máy chủ đang gặp vấn đề}"
	    [[ -n "$mariadb2" ]] && echo "$mariadb2" # Chỉ echo nếu biến được đặt
	    [[ -n "$ols2" ]] && echo "$ols2"       # Chỉ echo nếu biến được đặt
	fi
	echo "${tinh_trang_may_chu:-Tình trạng máy chủ}: $hoatdong"
	echo "========================================================================="
	echo ""
	echo ""
else
	echo ""
    # Kiểm tra xem /etc/wptt/echo-color có tồn tại và thực thi được không
    if [[ -x "/etc/wptt/echo-color" ]]; then
	    . /etc/wptt/echo-color
	    echoDo "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
    else
        echo "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=" # Dự phòng
    fi
	echo ""
	echo ""
	#echo "${wptangtoc_ols_menu_chinh:-Menu chính WPTangToc OLS}:" # Thêm giá trị mặc định
	echo "$wptangtoc_ols_menu_chinh:"
	echo ""
fi


options=(
	"$quan_ly_wordpress"               #1
	"$quan_ly_domain"                  #2
	"$quan_ly_ssl"                     #3
	"$quan_ly_database"                #4
	"$backup_restore"             #5
	"$tai_ma_nguon_wordpress"          #6
	"$quan_ly_sevice"     #7
	"$quan_ly_ip"              #8
	"$quan_ly_ssh"                #9
	"$quan_ly_update"        #10
	"Preload Cache"         #11
	"$quan_ly_webguiadmin"             #12
	"$cau_hinh_webserver"              #13
	"$quan_ly_php"                     #14
	"$quan_ly_logs"                    #15
	"Duplicate website"               #16
	"$quan_ly_ma_nguon"                #17
	"$phan_quyen"              #18
	"$quan_ly_cache"          #19
	"$quan_ly_disk"   #20
	"$thong_tin_webserver"             #21
	"$bao_mat"                         #22
	"$update_wptangtoc_ols"          #23
	"$quan_ly_phpmyadmin" #24
	"$gui_yeu_cau_gia_tuan"         #25
	"$quan_ly_swap"                    #26
	"$chuyen_website" #27
	"$quan_ly_file_manager" #28
	"$quan_ly_tai_nguyen" #29
	"$gia_lap_website" #29
	"$tai_tro_du_an"
	"$nhom_facebook_thao_luan"
	"$quan_ly_ngon_ngu"
	"WPTangToc OLS Add Ons"
	# "Tặng tác giả cốc bia"     #30
	# "Dịch vụ giải quyết vấn đề"     #31
)

# Hàm để thực thi hành động dựa trên chỉ số (index 0-based)
run_action() {
    local index=$1
    local script_path=""
    local script_args=""

    case $((index + 1)) in # Map index to option number
        1)  script_path="/etc/wptt/wptt-wordpress-main" ;;
        2)  script_path="/etc/wptt/wptt-domain-main" ;;
        3)  script_path="/etc/wptt/wptt-ssl-main" ;;
        4)  script_path="/etc/wptt/wptt-db-main" ;;
        5)  script_path="/etc/wptt/wptt-backup-restore-main" ;;
        6)  script_path="/etc/wptt/wptt-install-wordpress2"; script_args="99" ;;
        7)  script_path="/etc/wptt/wptt-service-main" ;; # Check filename typo: sevice vs service?
        8)  script_path="/etc/wptt/wptt-khoa-ip-main" ;;
        9)  script_path="/etc/wptt/wptt-ssh-main" ;;
        10) script_path="/etc/wptt/wptt-update-main" ;;
        11) script_path="/etc/wptt/wptt-preload-cache2"; script_args="98" ;;
        12) script_path="/etc/wptt/wptt-webadmin-main" ;;
        13) script_path="/etc/wptt/wptt-cau-hinh-websever-main" ;; # Check filename typo: websever vs webserver?
        14) script_path="/etc/wptt/wptt-php-ini-main" ;;
        15) script_path="/etc/wptt/wptt-menu-logs" ;;
        16) script_path="/etc/wptt/wptt-sao-chep-website"; script_args="98" ;;
        17) script_path="/etc/wptt/wptt-ma-nguon-main" ;;
        18) script_path="/etc/wptt/wptt-phan-quyen-all"; script_args="99" ;;
        19) script_path="/etc/wptt/wptt-cache-main" ;;
        20) script_path="/etc/wptt/wptt-disk-main"; script_args="98" ;;
        21) script_path="/etc/wptt/wptt-kiemtra"; script_args="98" ;;
        22) script_path="/etc/wptt/wptt-bao-mat-main" ;;
        23) script_path="/etc/wptt/wptt-update"; script_args="97" ;;
        24) script_path="/etc/wptt/wptt-phpmyadmin-main" ;;
        25) script_path="/etc/wptt/wptt-feedback"; script_args="98" ;;
        26) script_path="/etc/wptt/wptt-swap-main" ;;
        27) script_path="/etc/wptt/wptt-chuyen-web-main" ;;
        28) script_path="/etc/wptt/wptt-quan-ly-files-main" ;;
        29) script_path="/etc/wptt/wptt-tai-nguyen-main"; script_args="98" ;;
        30) script_path="/etc/wptt/wptt-gia-lap-main"; script_args="98" ;;
        31) script_path="/etc/wptt/wptt-donate"; script_args="98" ;;
        32) script_path="/etc/wptt/wptt-nhom-fb"; script_args="98" ;;
        33) script_path="/etc/wptt/lang-main"; script_args="98" ;;
        34) script_path="/etc/wptt/wptt-add-one-main"; script_args="98" ;;
        *)  echo "Lỗi: Hành động không xác định cho chỉ mục $index." ; return 1 ;;
    esac

    # Kiểm tra xem tệp script có tồn tại và có quyền thực thi không
    if [[ -x "$script_path" ]]; then
        "$script_path" $script_args # Chạy script với tham số nếu có
    else
        echo "Lỗi: Không tìm thấy hoặc không thể thực thi script '$script_path'."
    fi
}

fzf_installed=false
if command -v fzf &>/dev/null; then
    fzf_installed=true
    # Lưu ý: Biến ngôn ngữ phải được đặt TRƯỚC khi định nghĩa PS3
    PS3="
$(tput setab 0)${nhap_lua_chon_cua_ban} (1-${#options[@]}) [00=${chon_nhanh}] [0=${exit_thoat}]:$(tput sgr0) "
else
    PS3="
$(tput setab 0)${nhap_lua_chon_cua_ban} (1-${#options[@]}) [0=${exit_thoat}]:$(tput sgr0) "
fi

# Sử dụng select để hiển thị menu, nhưng xử lý dựa trên REPLY
select opt in "${options[@]}"; do
    case $REPLY in
        0) # Thoát
            echo "Đang thoát..."
            # Lệnh kill của bạn (cẩn thận khi dùng kill -9)
            if [[ -x "/etc/wptt/wptt-status2" ]]; then . /etc/wptt/wptt-status2; fi
			# kill -TERM $$


			# Lấy tên TTY (terminal) hiện tại dạng ngắn (ví dụ: pts/0)
			current_short_tty=$(basename "$(tty 2>/dev/null)" || echo "unknown")
			# Lấy PID của chính script/shell đang chạy lệnh này
			current_pid=$$


# Kiểm tra xem có lấy được TTY không
if [[ "$current_short_tty" == "unknown" ]]; then
	# Ghi lỗi ra standard error
	#echo "Lỗi: Không thể xác định TTY của terminal hiện tại." >&2

	ps -aef | grep 'bash\|python' | grep -E '(/etc/wptt|/bin/wptangtoc)' | grep -v grep | grep -v 'preload'| grep -v 'status' | grep -v 'mysql' | grep -v 'zip' | awk '{print $2}' | xargs kill -9 >/dev/null 2>&1| echo 'Hoàn tất thoát menu WPTangToc OLS' | tr -s '\n' ' ' #pkill all truyền thống

else
	# Tìm các PID cần kill trên terminal hiện tại, loại trừ chính nó
	# Sử dụng ps -t <tty> -f để giới hạn trong TTY hiện tại và giữ định dạng đầy đủ
	pids_to_kill=$(ps -t "$current_short_tty" -f | \
		grep 'bash\|python' | \
		grep -E '(/etc/wptt|/bin/wptangtoc)' | \
		grep -v grep | \
		# grep -v 'preload' | \
		grep -v 'status' | \
		# grep -v 'mysql' | \
		# grep -v 'zip' | \
		# Dùng awk để lọc bỏ PID của chính nó ($$) và chỉ in ra cột PID ($2)
			awk -v selfpid="$current_pid" '$2 != selfpid {print $2}')

	# Kiểm tra xem có PID nào được tìm thấy không trước khi chạy kill
	if [[ -n "$pids_to_kill" ]]; then
		# Thông báo (nên ghi ra stderr để không ảnh hưởng output chuẩn nếu có)
		# Sử dụng xargs -r để chỉ chạy kill nếu có PID đầu vào
		# if [[ $pids_to_kill ]];then
		# echo "$pids_to_kill" | (xargs -r kill -9 >/dev/null 2>&1) | echo "Hoàn tất thoát menu WPTangToc OLS ok" | tr -s '\n' ' '
		# fi

		# array_size=${#pids_to_kill[@]}

		if [[ $(echo $pids_to_kill| wc -w) -gt 1 ]]; then # đếm mảng nhưng thức tế sting
			echo "$pids_to_kill" | (xargs -r kill -9 >/dev/null 2>&1) | echo "Hoàn tất thoát menu WPTangToc OLS" | tr -s '\n' ' '
		else
			echo "$pids_to_kill" | (xargs -r kill -9 >/dev/null 2>&1)
		fi
		# for pid_kill in ${pids_to_kill[@]};do
		# 	(kill -9 $pid_kill >/dev/null 2>&1)
		# done
		# Bạn có thể bỏ >/dev/null 2>&1 nếu muốn thấy lỗi từ kill (ví dụ: process không tồn tại)
		# Nếu muốn ẩn lỗi kill: echo "$pids_to_kill" | xargs -r kill -9 >/dev/null 2>&1
	else
		# Thông báo nếu không tìm thấy gì để kill
		ps -aef | grep 'bash\|python' | grep -E '(/etc/wptt|/bin/wptangtoc)' | grep -v grep | grep -v 'preload'| grep -v 'status' | grep -v 'mysql' | grep -v 'zip' | awk '{print $2}' | xargs kill -9 >/dev/null 2>&1| echo 'Hoàn tất thoát menu WPTangToc OLS' | tr -s '\n' ' ' #pkill all truyền thống

	fi
fi


			# exit 130;
            #echo "${hoan_tat_thoat_menu:-Hoàn tất thoát menu WPTangToc OLS}"
            break # Thoát khỏi vòng lặp select
            ;;

        00) # Gọi FZF
            if $fzf_installed; then

            fzf_height=$(( ${#options[@]} + 3 )) # Chiều cao cửa sổ fzf
            fzf_prompt="${nhap_lua_chon_cua_ban:-Tìm kiếm lựa chọn} (Mũi tên di chuyển, Enter chọn, ESC hủy): "

            # Chạy fzf, lấy văn bản lựa chọn
            selected_opt=$(printf '%s\n' "${options[@]}"| nl -w 3 -s ': ' | fzf --prompt="$fzf_prompt" --height="$fzf_height" --border --cycle --reverse)
			selected_opt=$(echo "$selected_opt" | sed 's/^[[:space:]]*[0-9]\+\:[[:space:]]*//')
            fzf_exit_status=$? # Lấy mã thoát của fzf

            if [[ $fzf_exit_status -eq 0 ]] && [[ -n "$selected_opt" ]]; then
                # Người dùng đã chọn một mục bằng fzf
                selected_index=-1
                # Tìm chỉ số (index) của mục đã chọn trong mảng options
                for i in "${!options[@]}"; do
                   # So sánh chính xác, loại bỏ khoảng trắng thừa cuối dòng nếu có
                   if [[ "$(echo -n "${options[$i]}" | sed 's/[[:space:]]*$//')" == "$(echo -n "$selected_opt" | sed 's/[[:space:]]*$//')" ]]; then
                      selected_index=$i
                      break
                   fi
                done

                if [[ $selected_index -ne -1 ]]; then
                    # Tìm thấy chỉ số, chạy hành động tương ứng
                    echo "Đã chọn: ${options[$selected_index]}" # Thông báo cho người dùng
                    run_action "$selected_index"
                    # Sau khi chạy xong, quay lại hiển thị menu
                else
                    # Lỗi này không nên xảy ra nếu fzf hoạt động đúng
                    echo "Lỗi: Không thể khớp lựa chọn FZF '$selected_opt' với danh sách. ${vui_long_chon_lai:-Vui lòng chọn lại.}"
                fi
            else
                # Người dùng hủy fzf (ESC, Ctrl+C) hoặc không chọn gì
                echo "${vui_long_chon_lai:-Vui lòng chọn lại.}"
            fi
			fi
            # Luôn xóa REPLY và tiếp tục để hiển thị lại menu sau khi dùng FZF hoặc hủy
            REPLY=""
            continue
            ;;

        *) # Xử lý nhập số thông thường hoặc nhập không hợp lệ
            # Kiểm tra xem REPLY có phải là số và nằm trong khoảng hợp lệ không
            if [[ "$REPLY" =~ ^[0-9]+$ ]] && [ "$REPLY" -ge 1 ] && [ "$REPLY" -le ${#options[@]} ]; then
                # Số hợp lệ -> opt sẽ chứa văn bản tùy chọn
                # Tìm chỉ số dựa trên REPLY
                action_index=$((REPLY - 1))
                echo "Đã chọn: ${options[$action_index]}" # Thông báo cho người dùng
                run_action "$action_index"
                # Sau khi chạy xong, quay lại hiển thị menu
            else
                # Nhập không hợp lệ (không phải 0, 00, hoặc số trong khoảng)
                echo "${lua_chon_khong_hop_le:-Lựa chọn không hợp lệ}: '$REPLY'. ${vui_long_chon_lai:-Vui lòng chọn lại.}"
            fi
            # Xóa REPLY và tiếp tục để hiển thị lại menu
            REPLY=""
            continue
            ;;
    esac
    # Thông thường sẽ không chạy đến đây trừ khi có lỗi logic,
    # nhưng để chắc chắn, xóa REPLY và tiếp tục
    REPLY=""
done

#!/bin/bash
# @author: Gia Tuấn
# @website: https://wptangtoc.com
# @email: giatuan@wptangtoc.com
# @since: 2024
# @modified: 2025-03-30 - Changed start to stop actions

# --- Khởi tạo và tải cấu hình ---
# Tải cấu hình chính
if [[ -f "/etc/wptt/.wptt.conf" ]]; then
    . "/etc/wptt/.wptt.conf"
else
    # Gán ngôn ngữ mặc định nếu không có file config
    ngon_ngu='vi'
    echo "Cảnh báo: Không tìm thấy tệp cấu hình /etc/wptt/.wptt.conf. Sử dụng ngôn ngữ mặc định 'vi'."
fi

# Xác định và tải file ngôn ngữ
if [[ -z "$ngon_ngu" ]]; then # Kiểm tra chuỗi rỗng an toàn hơn
    ngon_ngu='vi'
fi
lang_file="/etc/wptt/lang/${ngon_ngu}.sh"
if [[ -f "$lang_file" ]]; then
    . "$lang_file"
else
    echo "Cảnh báo: Không tìm thấy tệp ngôn ngữ '$lang_file'. Sử dụng tiếng Việt mặc định."
    # Cố gắng tải tiếng Việt nếu có
    if [[ -f "/etc/wptt/lang/vi.sh" ]]; then
        . "/etc/wptt/lang/vi.sh"
    else
        echo "Lỗi: Không tìm thấy cả tệp ngôn ngữ mặc định /etc/wptt/lang/vi.sh"
    fi
fi

# --- Gán giá trị mặc định cho các biến (quan trọng nếu file lang thiếu) ---
# **Đã đổi tên và nội dung biến thành "Ngừng"**
quan_ly_stop_service=${quan_ly_stop_service:-"Quản lý Ngừng Service"} # Đổi tên biến và văn bản
ngung_litespeed_webserver=${ngung_litespeed_webserver:-"Ngừng LiteSpeed-Webserver"} # Đổi văn bản
ngung_maria_database=${ngung_maria_database:-"Ngừng Maria-Database"} # Đổi văn bản
ngung_fail2ban=${ngung_fail2ban:-"Ngừng Fail2ban"} # Đổi văn bản
ngung_all_service=${ngung_all_service:-"Ngừng ALL-service"} # Đổi văn bản
ngung_lsmemcached=${ngung_lsmemcached:-"Ngừng LSMemcached"} # Đổi văn bản
ngung_redis=${ngung_redis:-"Ngừng Redis"} # Đổi văn bản
ngung_memcached=${ngung_memcached:-"Ngừng Memcached"} # Đổi văn bản
ngung_csf=${ngung_csf:-"Ngừng CSF"} # Đổi văn bản
ngung_nftables=${ngung_nftables:-"Ngừng Nftables"} # Đổi văn bản
ngung_firewalld=${ngung_firewalld:-"Ngừng Firewalld"} # Đổi văn bản

tinh_trang_hoat_dong_cac_service_hien_tai=${tinh_trang_hoat_dong_cac_service_hien_tai:-"Tình trạng hoạt động các service hiện tại"}
nhap_lua_chon_cua_ban=${nhap_lua_chon_cua_ban:-"Nhập lựa chọn của bạn"}
chon_nhanh=${chon_nhanh:-"Chọn nhanh"}
exit_thoat=${exit_thoat:-"Thoát"}
lua_chon_khong_hop_le=${lua_chon_khong_hop_le:-"Lựa chọn không hợp lệ"}
vui_long_chon_lai=${vui_long_chon_lai:-"Vui lòng chọn lại"}
#-----------------------------------------------------

# Hàm get_status đơn giản hóa việc lấy trạng thái (giữ nguyên)
get_status() {
    local service_name=$1
    # Kiểm tra systemctl tồn tại
    if ! command -v systemctl &>/dev/null; then
        echo "no-systemctl"
        return
    fi
    # Lấy trạng thái
    systemctl status "${service_name}.service" 2>/dev/null | grep 'Active:' | cut -f2 -d':' | xargs | cut -f1 -d' ' | xargs || echo "not-found"
}

# --- Hiển thị header và trạng thái (nếu không có tham số) ---
# Phần này giữ nguyên để hiển thị trạng thái
if [[ $1 = "" ]];then
    if [[ -x "/etc/wptt/wptt-header-menu" ]]; then
        . /etc/wptt/wptt-header-menu
        header_menu
    else
        echo "Lỗi: Không tìm thấy /etc/wptt/wptt-header-menu"
    fi
    echo "+-----------------------------------------------------------------------+"
    printf "| %-69s |\n" "$tinh_trang_hoat_dong_cac_service_hien_tai"
    echo "+-----------------------------------------------------------------------+"
    printf "| %-13s : %-50.50s |\n" "LiteSpeed" "$(get_status lshttpd)"
    printf "| %-13s : %-50.50s |\n" "MariaDB" "$(get_status mariadb)"
    if [[ -f /etc/sysconfig/memcached ]];then
        printf "| %-13s : %-50.50s |\n" "Memcached" "$(get_status memcached)"
    fi
    if [[ -d /usr/local/lsmcd ]];then
        printf "| %-13s : %-50.50s |\n" "LSMemcached" "$(get_status lsmcd)"
    fi
    if [[ -f /etc/redis.conf ]];then
        printf "| %-13s : %-50.50s |\n" "Redis" "$(get_status redis)"
    fi
    printf "| %-13s : %-50.50s |\n" "SSH" "$(get_status sshd)"
    printf "| %-13s : %-50.50s |\n" "Crond" "$(get_status crond)"
    printf "| %-13s : %-50.50s |\n" "Fail2Ban" "$(get_status fail2ban)"
    if command -v csf &> /dev/null; then
        printf "| %-13s : %-50.50s |\n" "CSF (LFD)" "$(get_status lfd)"
    fi
    if systemctl list-units --full -all | grep -q 'firewalld.service'; then
        printf "| %-13s : %-50.50s |\n" "Firewalld" "$(get_status firewalld)"
    fi
    if systemctl list-units --full -all | grep -q 'nftables.service'; then
        printf "| %-13s : %-50.50s |\n" "Nftables" "$(get_status nftables)"
    fi
    echo "+-----------------------------------------------------------------------+"

else
    # Tải echo-color nếu có tham số
    if [[ -x "/etc/wptt/echo-color" ]]; then
        . /etc/wptt/echo-color
        echoDo "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
    else
        echo "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=" # Dự phòng
    fi
fi

# --- Định nghĩa Hàm Hành Động và Menu Động ---

# Hàm thực thi hành động dựa trên index (cho menu Stop Service)
# **Đã cập nhật hành động thành "stop"**
run_action() {
    local index=$1
    local service_name=""
    local action_desc="" # Mô tả hành động

    # Ánh xạ index dựa trên thứ tự CÓ THỂ có
    # Thứ tự: lsws, mariadb, fail2ban, ALL, lsmcd, redis, memcached, csf, nftables, firewalld
    # **Sử dụng biến "ngung_"**
    case $index in
        0) service_name="lshttpd"; action_desc="${ngung_litespeed_webserver}" ;;
        1) service_name="mariadb"; action_desc="${ngung_maria_database}" ;;
        2) service_name="fail2ban"; action_desc="${ngung_fail2ban}" ;;
        3) action_desc="${ngung_all_service}" ;; # Xử lý đặc biệt
        4) service_name="lsmcd"; action_desc="${ngung_lsmemcached}" ;;
        5) service_name="redis"; action_desc="${ngung_redis}" ;;
        6) service_name="memcached"; action_desc="${ngung_memcached}" ;;
        7) action_desc="${ngung_csf}" ;; # Xử lý đặc biệt
        8) service_name="nftables"; action_desc="${ngung_nftables}" ;;
        9) service_name="firewalld"; action_desc="${ngung_firewalld}" ;;
        *) echo "${lua_chon_khong_hop_le:-Lựa chọn không hợp lệ}: Index $index."; return 1 ;;
    esac

    # Sử dụng action_desc đã lấy từ case hoặc biến ngôn ngữ
    echo "Đang thực hiện: ${action_desc}..."
    echo "-------------------------------------------------------------------------"

    # --- Thực thi hành động (Sử dụng systemctl stop) ---
    if [[ $index -eq 3 ]]; then # Stop ALL
        echo "Ngừng LiteSpeed..."
        systemctl stop lshttpd.service
        echo "Ngừng MariaDB..."
        systemctl stop mariadb.service
        echo "Ngừng Fail2Ban..."
        systemctl stop fail2ban.service

        # Ngừng các dịch vụ tùy chọn nếu chúng tồn tại
        if systemctl list-units --full -all | grep -q 'lsmcd.service'; then
            echo "Ngừng LSMemcached..."
            systemctl stop lsmcd.service
        fi
        if systemctl list-units --full -all | grep -q 'redis.service'; then
            echo "Ngừng Redis..."
            systemctl stop redis.service
        fi
        if systemctl list-units --full -all | grep -q 'memcached.service'; then
            echo "Ngừng Memcached..."
            systemctl stop memcached.service
        fi

        # Ngừng dịch vụ Firewall đang hoạt động (ưu tiên CSF > firewalld > nftables)
        # **Sử dụng lệnh stop cho CSF**
        if command -v csf &> /dev/null && systemctl is-active lfd.service &>/dev/null; then
            echo "Ngừng CSF & LFD..."
            csf -f &> /dev/null # Flush rules and stop CSF
            systemctl stop lfd.service
        fi

        if systemctl is-active firewalld.service &>/dev/null; then
            echo "Ngừng Firewalld..."
            systemctl stop firewalld.service
        fi

        if systemctl is-active nftables.service &>/dev/null; then
            echo "Ngừng Nftables..."
            systemctl stop nftables.service
        fi

        echo "Hoàn thành ngừng các dịch vụ."

    elif [[ $index -eq 7 ]]; then # Stop CSF (Index 7)
        # **Sử dụng lệnh stop cho CSF**
        if command -v csf &> /dev/null; then
             # Kiểm tra xem LFD có đang chạy không trước khi cố gắng dừng
            if systemctl is-active lfd.service &>/dev/null; then
                echo "Ngừng CSF & LFD..."
                csf -f &> /dev/null # Flush rules and stop CSF
                systemctl stop lfd.service # Stop Login Failure Daemon
                echo "Hoàn thành ngừng CSF."
                sleep 1
                local lfd_status=$(systemctl is-active lfd.service 2>/dev/null)
                 # Trạng thái sau khi stop thường là 'inactive' hoặc 'failed'
                echo "Trạng thái LFD hiện tại: ${lfd_status:-Không xác định}"
            else
                echo "CSF (LFD) dường như đã dừng."
                # Có thể vẫn chạy csf -f để đảm bảo rules bị xóa nếu cần
                # csf -f &> /dev/null
            fi
        else
            echo "Lỗi: CSF dường như chưa được cài đặt."
        fi

    elif [[ -n "$service_name" ]]; then # Stop dịch vụ cụ thể
        # **Sử dụng systemctl stop**
        if systemctl list-units --full -all | grep -q "${service_name}.service"; then
            # Kiểm tra xem dịch vụ có đang chạy không trước khi dừng
             if systemctl is-active "${service_name}.service" &>/dev/null; then
                 systemctl stop "${service_name}.service"
                 echo "Hoàn thành ngừng ${action_desc}."
                 sleep 1
                 local current_status=$(systemctl is-active "${service_name}.service" 2>/dev/null)
                 echo "Trạng thái ${action_desc} hiện tại: ${current_status:-Không xác định}"
             else
                 echo "Dịch vụ ${action_desc} dường như đã dừng."
             fi
        else
             echo "Dịch vụ ${service_name} không tìm thấy." # Thông báo rõ hơn
        fi
    else
        echo "Lỗi logic: Không xác định được hành động cụ thể cho index $index."
        return 1
    fi

    echo "-------------------------------------------------------------------------"
}


# **Đã cập nhật tiêu đề menu**
echo "${quan_ly_stop_service:-Quản lý Ngừng Service}:"
# Mảng options cơ bản (sử dụng biến ngôn ngữ với fallback)
# **Đã cập nhật văn bản thành "Ngừng"**
options=(
    "${ngung_litespeed_webserver:-Ngừng LiteSpeed-Webserver}" # Index 0
    "${ngung_maria_database:-Ngừng Maria-Database}"          # Index 1
    "${ngung_fail2ban:-Ngừng Fail2ban}"                      # Index 2
    "${ngung_all_service:-Ngừng ALL-service}"                # Index 3
)
# Index tiềm năng tiếp theo: 4=lsmcd, 5=redis, 6=memcached, 7=csf, 8=nftables, 9=firewalld

# Thêm các tùy chọn động dựa trên sự tồn tại của dịch vụ
# **Đã cập nhật văn bản thành "Ngừng"**
if [[ -d /usr/local/lsmcd ]] && systemctl list-units --full -all | grep -q 'lsmcd.service'; then
    options+=("${ngung_lsmemcached:-Ngừng LSMemcached}") # Index 4 tiềm năng
fi
if [[ -f /etc/redis.conf ]] && systemctl list-units --full -all | grep -q 'redis.service'; then
    options+=("${ngung_redis:-Ngừng Redis}") # Index 5 tiềm năng
fi
if [[ -f /etc/sysconfig/memcached ]] && systemctl list-units --full -all | grep -q 'memcached.service'; then
    options+=("${ngung_memcached:-Ngừng Memcached}") # Index 6 tiềm năng
fi
if command -v csf &> /dev/null; then
    options+=("${ngung_csf:-Ngừng CSF}") # Index 7 tiềm năng
fi
if systemctl list-units --full -all | grep -q 'nftables.service'; then
     options+=("${ngung_nftables:-Ngừng Nftables}") # Index 8 tiềm năng
fi
if systemctl list-units --full -all | grep -q 'firewalld.service'; then
     options+=("${ngung_firewalld:-Ngừng Firewalld}") # Index 9 tiềm năng
fi


# --- Vòng lặp Menu Tương tác ---
fzf_installed=false
if command -v fzf &>/dev/null; then
    fzf_installed=true
fi

# Đặt PS3 dựa trên việc fzf có được cài đặt hay không
if $fzf_installed; then
    PS3="
$(tput setab 0)${nhap_lua_chon_cua_ban} (1-${#options[@]}) [00=${chon_nhanh}] [0=${exit_thoat}]:$(tput sgr0) "
else
    PS3="
$(tput setab 0)${nhap_lua_chon_cua_ban} (1-${#options[@]}) [0=${exit_thoat}]:$(tput sgr0) "
fi

echo ""
echo ""
echo ""

# Sử dụng select để hiển thị menu động
select opt in "${options[@]}"; do
    case $REPLY in
        0) # Thoát/Quay lại menu chính
			echo "Đang quay lại menu quản lý service..."
			. /etc/wptt/wptt-service-main 1

            break # Thoát khỏi vòng lặp select của menu con này
            ;;

        00) # Gọi FZF (chỉ khi đã cài đặt)
            if $fzf_installed; then
                fzf_height=$(( ${#options[@]} + 4 ))
                [[ $fzf_height -gt 15 ]] && fzf_height=15
                fzf_prompt="${nhap_lua_chon_cua_ban} (Mũi tên di chuyển, Enter chọn, ESC hủy): "

                selected_opt=$(printf '%s\n' "${options[@]}" | nl -w 3 -s ': ' | fzf --prompt="$fzf_prompt" --height="$fzf_height" --border --cycle --reverse)
                fzf_exit_status=$?
                selected_opt=$(echo "$selected_opt" | sed 's/^[[:space:]]*[0-9]\+\:[[:space:]]*//')

                if [[ $fzf_exit_status -eq 0 ]] && [[ -n "$selected_opt" ]]; then
                    selected_index=-1
                    for i in "${!options[@]}"; do
                        if [[ "$(echo -n "${options[$i]}" | sed 's/[[:space:]]*$//')" == "$(echo -n "$selected_opt" | sed 's/[[:space:]]*$//')" ]]; then
                            selected_index=$i
                            break
                        fi
                    done

                    if [[ $selected_index -ne -1 ]]; then
                        # Xác định index "cố định" tương ứng
                        # **Logic ánh xạ sử dụng văn bản "Ngừng" hoặc tên dịch vụ**
                        fixed_index=-1
                        option_text_selected="${options[$selected_index]}"
                        if [[ "$option_text_selected" == *LiteSpeed* ]]; then fixed_index=0
                        elif [[ "$option_text_selected" == *Maria* ]]; then fixed_index=1
                        elif [[ "$option_text_selected" == *Fail2ban* ]]; then fixed_index=2
                        elif [[ "$option_text_selected" == *ALL-service* ]]; then fixed_index=3
                        elif [[ "$option_text_selected" == *LSMemcached* ]]; then fixed_index=4
                        elif [[ "$option_text_selected" == *Redis* ]]; then fixed_index=5
                        elif [[ "$option_text_selected" == *Memcached* && "$option_text_selected" != *LSMemcached* ]]; then fixed_index=6
                        elif [[ "$option_text_selected" == *CSF* ]]; then fixed_index=7
                        elif [[ "$option_text_selected" == *Nftables* ]]; then fixed_index=8
                        elif [[ "$option_text_selected" == *Firewalld* ]]; then fixed_index=9
                        fi

                        if [[ $fixed_index -ne -1 ]]; then
                            run_action "$fixed_index"
                        else
                            echo "Lỗi: Không thể ánh xạ lựa chọn động '$option_text_selected' sang index cố định."
                        fi
                    else
                        echo "Lỗi: Không thể khớp lựa chọn FZF '$selected_opt' với danh sách."
                    fi
                else
                     echo "${vui_long_chon_lai}"
                fi
            else
                 echo "${lua_chon_khong_hop_le}: '00'. FZF chưa được cài đặt."
            fi
            REPLY=""
            echo "$PS3" # Hiển thị lại prompt
            continue
            ;;

        *) # Xử lý nhập số hoặc nhập không hợp lệ
            if [[ "$REPLY" =~ ^[1-9][0-9]*$ ]] && [ "$REPLY" -ge 1 ] && [ "$REPLY" -le ${#options[@]} ]; then
                action_index_dynamic=$((REPLY - 1))

                # Ánh xạ index động sang index cố định
                # **Logic ánh xạ sử dụng văn bản "Ngừng" hoặc tên dịch vụ**
                fixed_index=-1
                option_text_selected="${options[$action_index_dynamic]}"
                 if [[ "$option_text_selected" == *LiteSpeed* ]]; then fixed_index=0
                 elif [[ "$option_text_selected" == *Maria* ]]; then fixed_index=1
                 elif [[ "$option_text_selected" == *Fail2ban* ]]; then fixed_index=2
                 elif [[ "$option_text_selected" == *ALL-service* ]]; then fixed_index=3
                 elif [[ "$option_text_selected" == *LSMemcached* ]]; then fixed_index=4
                 elif [[ "$option_text_selected" == *Redis* ]]; then fixed_index=5
                 elif [[ "$option_text_selected" == *Memcached* && "$option_text_selected" != *LSMemcached* ]]; then fixed_index=6
                 elif [[ "$option_text_selected" == *CSF* ]]; then fixed_index=7
                 elif [[ "$option_text_selected" == *Nftables* ]]; then fixed_index=8
                 elif [[ "$option_text_selected" == *Firewalld* ]]; then fixed_index=9
                 fi

                 if [[ $fixed_index -ne -1 ]]; then
                     run_action "$fixed_index"
                 else
                     echo "Lỗi: Không thể ánh xạ lựa chọn động '$option_text_selected' sang index cố định."
                 fi
            else
                echo "${lua_chon_khong_hop_le}: '$REPLY'. ${vui_long_chon_lai}"
            fi
            REPLY=""
            echo "$PS3" # Hiển thị lại prompt
            continue
            ;;
    esac
done

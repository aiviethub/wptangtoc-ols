#!/bin/bash
# @author: Gia Tuấn (Dựa trên yêu cầu)
# @website: https://wptangtoc.com
# @email: giatuan@wptangtoc.com
# @since: 2025-04-01

. /etc/wptt/.wptt.conf
if [[ $ngon_ngu = '' ]];then
	ngon_ngu='vi'
fi
. /etc/wptt/lang/$ngon_ngu.sh
. /etc/wptt/echo-color
# --- Định nghĩa Menu và Hành động ---
echo ""
echo ""
echo "$reboot_khoi_dong_lai_service_application"
echo ""
options=(
	"${restart_mariadb:-Khởi động lại MariaDB}"                  # Index 0
	"${restart_lsws:-Khởi động lại LiteSpeed}"                  # Index 1
	"${restart_nftables:-Khởi động lại Nftables}"                # Index 2
	"${restart_csf:-Khởi động lại CSF Firewall}"                # Index 3
	"${restart_firewalld:-Khởi động lại Firewalld}"              # Index 4
	"${restart_sshd:-Khởi động lại SSHd}"                      # Index 5
	"${restart_fail2ban:-Khởi động lại Fail2ban}"                # Index 6
	"${restart_memcached:-Khởi động lại Memcached}"              # Index 7  <- Mới
	"${restart_lsmcd:-Khởi động lại LSMCD (LS Memcached)}"      # Index 8  <- Mới
	"${restart_redis:-Khởi động lại Redis}"                    # Index 9  <- Mới
	"${restart_all_services:-Khởi động lại TẤT CẢ Dịch vụ}" # Index 10 <- Mới
)

# --- Hàm Helper: Chứa logic kiểm tra và khởi động lại thực tế ---
_restart_service() {
	local service_name="$1"
	local display_name="$2"
	local check_command="$3"
	local is_csf=${4:-false}

	local not_found=false
	if [[ "$is_csf" = true ]]; then
		if ! command -v csf &> /dev/null; then not_found=true; fi
	elif [[ -n "$check_command" ]]; then
		if ! command -v "$check_command" &> /dev/null; then not_found=true; fi
	elif ! systemctl list-units --full --all | grep -Fq "$service_name"; then
		not_found=true
	fi

	if $not_found; then
		# Không in lỗi nếu không tìm thấy, chỉ return 1 để logic "All" bỏ qua
		# printf "$dich_vu_khong_tim_thay" "$display_name" >&2
		return 1 # Chỉ trả về mã lỗi nếu không tìm thấy
	fi

	# Chỉ in thông báo và thực hiện nếu dịch vụ được tìm thấy
	printf "$dang_khoi_dong_lai" "$display_name"
	local success=false
	_runing "Khởi động lại $service_name"
	if [[ "$is_csf" = true ]]; then
		if csf -r &> /dev/null; then success=true; fi # Ẩn output của csf -r
	else
		if systemctl restart "$service_name"; then success=true; fi
	fi

	if $success; then
		_rundone "Khởi động lại $service_name"
		#printf "$khoi_dong_lai_thanh_cong" "$display_name"
	else
		_runloi "Khởi động lại $service_name"
		#printf "$khoi_dong_lai_that_bai" "$display_name" >&2
	fi
	[[ "$success" = true ]] && return 0 || return 1
}

unset os_service_check
if $(cat /etc/*release | grep -q "Ubuntu") ; then
	os_service_check='Ubuntu'
fi
# --- Hàm THỰC HIỆN hành động dựa trên index ---
# Đã cập nhật với các dịch vụ mới và tùy chọn "All"
_perform_action() {
	local index=$1
	local ret_code=0
	case $index in
		0) _restart_service "mariadb.service" "${restart_mariadb:-MariaDB}" "mysql" ;;
		1) _restart_service "lsws.service" "${restart_lsws:-LiteSpeed}" "/usr/local/lsws/bin/lswsctrl" ;;
		2) _restart_service "nftables.service" "${restart_nftables:-Nftables}" "nft" ;;
		3) _restart_service "csf.service" "${restart_csf:-CSF Firewall}" "csf" true ;;
		4) _restart_service "firewalld.service" "${restart_firewalld:-Firewalld}" "firewall-cmd" ;;
		5) _restart_service "sshd.service" "${restart_sshd:-SSHd}" "sshd" ;;
		6) _restart_service "fail2ban.service" "${restart_fail2ban:-Fail2ban}" "fail2ban-client" ;;
		7) _restart_service "memcached.service" "${restart_memcached:-Memcached}" "memcached" ;; # Mới
		8) _restart_service "lsmcd.service" "${restart_lsmcd:-LSMCD}" "lsmcd" ;;                 # Mới
		9) # Sử dụng biến đã xác định cho Redis
			if [[ $os_service_check ]] ; then
				_restart_service "redis-server.service" "${restart_redis:-Redis}" "redis-server"
			else
				_restart_service "redis.service" "${restart_redis:-Redis}" "redis-server"
			fi
			;;
		# 9) _restart_service "redis-server.service" "${restart_redis:-Redis}" "redis-server" ;; # Mới (Kiểm tra tên service nếu cần)
		10) # Khởi động lại TẤT CẢ
			printf "$dang_khoi_dong_lai_tat_ca"
			echoDo "--------------------------------------------------" # Thêm phân cách
			# Gọi lại hàm _restart_service cho từng dịch vụ
			# Hàm _restart_service đã có kiểm tra cài đặt bên trong
			_restart_service "mariadb.service" "${restart_mariadb:-MariaDB}" "mysql"
			_restart_service "lsws.service" "${restart_lsws:-LiteSpeed}" "/usr/local/lsws/bin/lswsctrl"
			_restart_service "nftables.service" "${restart_nftables:-Nftables}" "nft"
			_restart_service "csf.service" "${restart_csf:-CSF Firewall}" "csf" true
			_restart_service "firewalld.service" "${restart_firewalld:-Firewalld}" "firewall-cmd"
			_restart_service "sshd.service" "${restart_sshd:-SSHd}" "sshd"
			_restart_service "fail2ban.service" "${restart_fail2ban:-Fail2ban}" "fail2ban-client"
			_restart_service "memcached.service" "${restart_memcached:-Memcached}" "memcached"
			_restart_service "lsmcd.service" "${restart_lsmcd:-LSMCD}" "lsmcd"
			if [[ $os_service_check ]] ; then
				_restart_service "redis-server.service" "${restart_redis:-Redis}" "redis-server"
			else
				_restart_service "redis.service" "${restart_redis:-Redis}" "redis-server"
			fi
			echoDo "--------------------------------------------------" # Thêm phân cách
			printf "$hoan_tat_khoi_dong_lai_tat_ca"
			ret_code=0 # Giả định thành công vì lỗi từng dịch vụ đã được báo cáo
			;;
		*)
			printf "${lua_chon_khong_hop_le:-Lựa chọn không hợp lệ}: Index '%s'.\n" "$index" >&2
			ret_code=1
			;;
	esac
	# Trả về mã lỗi cuối cùng (quan trọng cho trường hợp không phải "All")
	if [[ "$index" -ne 10 ]]; then
		_restart_service_ret=$?
		[[ $_restart_service_ret -ne 0 ]] && ret_code=$_restart_service_ret
	fi

	return $ret_code
}


# --- Hàm run_action (QUAN TRỌNG cho bộ phân tích của WPTangToc) ---
# Đã cập nhật với các index mới
run_action() {
	local index=$1
	local script_path="/etc/wptt/service/wptt-reboot-main" # Đường dẫn tới chính script này
	local script_args="$index"                             # Tham số là index tương ứng

	# Cấu trúc case này là BẮT BUỘC cho bộ phân tích của wptangtoc
	case $index in
		0) script_path="/etc/wptt/service/wptt-reboot-main"; script_args="0" ;;
		1) script_path="/etc/wptt/service/wptt-reboot-main"; script_args="1" ;;
		2) script_path="/etc/wptt/service/wptt-reboot-main"; script_args="2" ;;
		3) script_path="/etc/wptt/service/wptt-reboot-main"; script_args="3" ;;
		4) script_path="/etc/wptt/service/wptt-reboot-main"; script_args="4" ;;
		5) script_path="/etc/wptt/service/wptt-reboot-main"; script_args="5" ;;
		6) script_path="/etc/wptt/service/wptt-reboot-main"; script_args="6" ;;
		7) script_path="/etc/wptt/service/wptt-reboot-main"; script_args="7" ;; # Mới
		8) script_path="/etc/wptt/service/wptt-reboot-main"; script_args="8" ;; # Mới
		9) script_path="/etc/wptt/service/wptt-reboot-main"; script_args="9" ;; # Mới
		10) script_path="/etc/wptt/service/wptt-reboot-main"; script_args="10" ;; # Mới
		*)
			script_path="/bin/false"
			script_args=""
			echo "${lua_chon_khong_hop_le:-Lựa chọn không hợp lệ}: Index $index." >&2
			# return 1 # Không cần thiết
			;;
	esac

	# Gọi hàm thực hiện hành động thực tế
	_perform_action "$index"
	return $? # Trả về mã lỗi từ _perform_action
}

if [[ $1 = '98' ]]; then
	[[ -f /etc/wptt/wptt-callback-menu-chon ]] && . /etc/wptt/wptt-callback-menu-chon
fi

# --- Logic Thực thi Chính ---
if [[ -n "$1" && "$1" =~ ^[0-9]+$ ]]; then
	_perform_action "$1"
	exit $?
fi

# --- Chạy Độc Lập ---
if [[ -z "$1" ]]; then
	[[ -f /etc/wptt/wptt-header-menu ]] && . /etc/wptt/wptt-header-menu && header_menu
else
	echoDo "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
fi

echo ""
echo "${khoi_dong_lai_dich_vu:-Khởi động lại Dịch vụ Hệ thống}:"
echo ""


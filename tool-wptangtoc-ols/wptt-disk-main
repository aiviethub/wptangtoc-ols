#!/bin/bash
# @author: Gia Tuấn
# @website: https://wptangtoc.com
# @email: giatuan@wptangtoc.com
# @since: 2023

function huong_dan(){
Tính năng Quản lý Disk [Ổ đĩa] trong WPTangToc OLS là một công cụ tích hợp giúp người dùng theo dõi và quản lý dung lượng lưu trữ trên máy chủ một cách hiệu quả.

Giới thiệu ngắn gọn:
Mục đích: Cung cấp thông tin tổng quan về việc sử dụng ổ đĩa, giúp người dùng sớm phát hiện tình trạng đầy ổ cứng và thực hiện các hành động dọn dẹp cần thiết để đảm bảo máy chủ hoạt động ổn định.

Cách hoạt động:
 * Hiển thị dung lượng: Hiển thị thông tin về tổng dung lượng, dung lượng đã sử dụng và dung lượng còn trống của ổ đĩa hoặc các phân vùng chính.
 * Phân tích sử dụng [có thể]: Một số phiên bản có thể cung cấp thông tin chi tiết hơn về dung lượng sử dụng bởi các thư mục cụ thể [ví dụ: thư mục website, backups, logs].
 * Công cụ dọn dẹp cơ bản [có thể]: Có thể bao gồm các tùy chọn để dọn dẹp các tệp tin tạm, logs cũ, hoặc các bản sao lưu không cần thiết do WPTangToc OLS tạo ra.

Lợi ích:
 * Theo dõi dễ dàng: Nhanh chóng nắm bắt tình trạng sử dụng ổ đĩa mà không cần dùng lệnh Linux phức tạp.
 * Phòng ngừa sự cố: Giúp tránh tình trạng máy chủ ngừng hoạt động do hết dung lượng lưu trữ.
 * Tối ưu hóa dung lượng: Hỗ trợ giải phóng không gian ổ đĩa bằng cách loại bỏ các tệp không cần thiết.
Tính năng này giúp người dùng WPTangToc OLS chủ động hơn trong việc quản lý tài nguyên ổ đĩa, đảm bảo hiệu suất và sự ổn định cho máy chủ.
}


if [[ $1 = "" ]];then
. /etc/wptt/wptt-header-menu
header_menu
else
	. /etc/wptt/echo-color
echoDo "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
fi
. /etc/wptt/.wptt.conf
if [[ $ngon_ngu = '' ]];then
	ngon_ngu='vi'
fi
. /etc/wptt/lang/$ngon_ngu.sh


# --- Disk (Sửa đổi) ---
disk_stats_output=$(df -BG / 2>/dev/null | awk 'NR==2 {print $3, $2, $5}') # $3=Used, $2=Total, $5=Use%
if [ -z "$disk_stats_output" ]; then
  # Nếu lệnh df không trả về kết quả (ví dụ: lỗi I/O, hệ thống rất bận)
  disk_used_gb="N/A"
  disk_total_gb="N/A"
  disk_percent_display="\033[31m(N/A)\033[0m" # Màu đỏ cho trạng thái N/A
else
  # Đọc các giá trị vào biến riêng biệt
  read -r disk_used_raw disk_total_raw disk_percent_raw_str <<< "$disk_stats_output"
  # Ví dụ: disk_used_raw="20G", disk_total_raw="40G", disk_percent_raw_str="53%"

  disk_used_gb=$(echo "$disk_used_raw" | sed 's/G//')
  disk_total_gb=$(echo "$disk_total_raw" | sed 's/G//')
  
  # Xóa dấu % để lấy giá trị số cho việc so sánh logic
  disk_percent_numeric=$(echo "$disk_percent_raw_str" | sed 's/%//')

  # Kiểm tra xem disk_percent_numeric có phải là số không
  if ! [[ "$disk_percent_numeric" =~ ^[0-9]+$ ]]; then
    # Nếu không phải số (ví dụ: df trả về định dạng lạ, hoặc disk_percent_raw_str trống)
    # Hiển thị (ERR%) với màu đỏ. Sử dụng giá trị gốc nếu có, hoặc ERR nếu trống.
    display_val_on_error="(${disk_percent_raw_str:-ERR})" 
    disk_percent_display="\033[31m${display_val_on_error}\033[0m"
    # Bạn cũng có thể muốn đặt lại disk_used_gb và disk_total_gb thành "ERR" ở đây nếu muốn
    # disk_used_gb="ERR"
    # disk_total_gb="ERR"
  else
    # Nếu là số, tiến hành định dạng màu như cũ
    # Sử dụng awk -v để truyền biến vào awk một cách an toàn hơn ENVIRON
    # Truyền chuỗi đã có dấu ngoặc đơn và % (ví dụ: "(53%)") vào awk
    disk_percent_display_input="(${disk_percent_raw_str})"
    disk_percent_display=$(echo "$disk_percent_numeric" | awk -v p_str="$disk_percent_display_input" \
      '{ \
        val = $1 + 0; # Đảm bảo $1 được coi là số
        if (val > 90) { \
          printf "\033[31m%s\033[0m", p_str; \
        } else if (val > 70) { \
          printf "\033[33m%s\033[0m", p_str; \
        } else { \
          printf "%s", p_str; \
        } \
      }')
  fi
fi
disk_info="${disk_used_gb}/${disk_total_gb}GB ${disk_percent_display}"

echo ""
echo "$dung_luong_o_cung_hien_tai: $disk_info"
echo ""
echo "$quan_ly_disk:"
echo ""
options=(
	"$kiem_tra_dung_luong_website"                     #0
	"$kiem_tra_file_lon_nhat"               #1
	"$kiem_tra_dung_luong_file_lon_nhat_cua_domain"               #1
	"$kiem_tra_dung_luong_thu_muc_lon_nhat"               #2
	"$kiem_tra_dung_luong_thu_muc_lon_nhat_cua_domain"               #2
)
run_action() {
    local index=$1
    local script_path=""
    local script_args="98" # Tham số 98 cho các script này

    case $index in
         0) script_path="/etc/wptt/disk/wptt-disk-website" ;;
         1) script_path="/etc/wptt/disk/wptt-larg-file-all-dung-luong-lon" ;;
         2) script_path="/etc/wptt/disk/wptt-larg-file-website-dung-luong-lon" ;;
         3) script_path="/etc/wptt/disk/wptt-larg-thu-muc-all-dung-luong-lon" ;;
         4) script_path="/etc/wptt/disk/wptt-larg-thu-muc-website-dung-luong-lon" ;;
        *) echo "${lua_chon_khong_hop_le:-Lựa chọn không hợp lệ}: Index $index."; return 1 ;;
    esac

    # Kiểm tra và chạy script con
    if [[ -x "$script_path" ]]; then
        "$script_path" "$script_args"
    else
        echo "Lỗi: Không tìm thấy hoặc không thể thực thi script '$script_path'."
    fi
    # read -rp "Nhấn Enter để quay lại menu..." # Bỏ comment nếu muốn tạm dừng
}
. /etc/wptt/wptt-callback-menu-chon

